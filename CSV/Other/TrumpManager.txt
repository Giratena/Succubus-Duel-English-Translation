default

@BackImage
    return,Trump_BackSide.png

@AllTrumpImages
    return,(Trump_spade (1).png,Trump_spade (2).png,Trump_spade (3).png,Trump_spade (4).png,Trump_spade (5).png,Trump_spade (6).png,Trump_spade (7).png,Trump_spade (8).png,Trump_spade (9).png,Trump_spade (10).png,Trump_spade (11).png,Trump_spade (12).png,Trump_spade (13).png,Trump_club (1).png,Trump_club (2).png,Trump_club (3).png,Trump_club (4).png,Trump_club (5).png,Trump_club (6).png,Trump_club (7).png,Trump_club (8).png,Trump_club (9).png,Trump_club (10).png,Trump_club (11).png,Trump_club (12).png,Trump_club (13).png,Trump_heart (1).png,Trump_heart (2).png,Trump_heart (3).png,Trump_heart (4).png,Trump_heart (5).png,Trump_heart (6).png,Trump_heart (7).png,Trump_heart (8).png,Trump_heart (9).png,Trump_heart (10).png,Trump_heart (11).png,Trump_heart (12).png,Trump_heart (13).png,Trump_diamond (1).png,Trump_diamond (2).png,Trump_diamond (3).png,Trump_diamond (4).png,Trump_diamond (5).png,Trump_diamond (6).png,Trump_diamond (7).png,Trump_diamond (8).png,Trump_diamond (9).png,Trump_diamond (10).png,Trump_diamond (11).png,Trump_diamond (12).png,Trump_diamond (13).png)

@AllTrumpIDs
    return,(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52)

@TrumpImage
    //指定した_#のトランプ画像を返す
    括弧文字列抜き出し,(Trump_spade (1).png,Trump_spade (2).png,Trump_spade (3).png,Trump_spade (4).png,Trump_spade (5).png,Trump_spade (6).png,Trump_spade (7).png,Trump_spade (8).png,Trump_spade (9).png,Trump_spade (10).png,Trump_spade (11).png,Trump_spade (12).png,Trump_spade (13).png,Trump_club (1).png,Trump_club (2).png,Trump_club (3).png,Trump_club (4).png,Trump_club (5).png,Trump_club (6).png,Trump_club (7).png,Trump_club (8).png,Trump_club (9).png,Trump_club (10).png,Trump_club (11).png,Trump_club (12).png,Trump_club (13).png,Trump_heart (1).png,Trump_heart (2).png,Trump_heart (3).png,Trump_heart (4).png,Trump_heart (5).png,Trump_heart (6).png,Trump_heart (7).png,Trump_heart (8).png,Trump_heart (9).png,Trump_heart (10).png,Trump_heart (11).png,Trump_heart (12).png,Trump_heart (13).png,Trump_diamond (1).png,Trump_diamond (2).png,Trump_diamond (3).png,Trump_diamond (4).png,Trump_diamond (5).png,Trump_diamond (6).png,Trump_diamond (7).png,Trump_diamond (8).png,Trump_diamond (9).png,Trump_diamond (10).png,Trump_diamond (11).png,Trump_diamond (12).png,Trump_diamond (13).png),_#1,&result
    return,&result

@Draw
    //_#1:山札,
    括弧文字列ランダム抜き出し,_#1,&トランプ数字
    return,&トランプ数字,
    
@BlackjackSum
    //_#1:手札
    &手札,=,_#1,
    $result,=,0
    while,&手札.Count,>,0
    {
        括弧文字列改変抜き出し,&手札,1,&トランプ数字
        if,&トランプ数字,>,10
        {
            $result,+=,10
        }else{
            if,&トランプ数字,==,1,
            {
                $result,+=,11
            }else{
                $result,+=,&トランプ数字
            }
        }
    }
    return,$result,

@表向きカード配置
    //_#1:トランプ数字,_#2:ソーターid,_#3:画像idの始点
    括弧文字列抜き出し,@AllTrumpImages(),_#1,&トランプ画像,
    $画像id,=,_#1+_#3
    画像,$画像id,&トランプ画像,
    親子化,_#2,$画像id
    SE,&&ドローSE

    

@裏向きカード配置
    //_#1:トランプ数字,_#2:ソーターid,_#3:画像idの始点
    $画像id,=,&トランプ数字+_#3
    画像,$画像id,@BackImage(),
    親子化,_#2,$画像id
    SE,&&ドローSE

//以下ブラックジャックのもの 現在開発中
    @ブラックジャックスタート
        自分プレイヤー設定,%%キャミー
        背景,&&宿屋朝背景
        &トランプ全画像,=,@AllTrumpImages(),
        &山札,=,@AllTrumpIDs(),
        $主人公ソーターID,=,2
        $自分ソーターID,=,3
        ソーター設置,$主人公ソーターID,横型,(0.25,0.1),(0.75,0.35)
        ソーター設置,$自分ソーターID,横型,(0.25,0.7),(0.75,0.95)
        $スタンドボタンID,=,4
        $ヒットボタンID,=,6
        $始点id,=,10
        while,true,
        {
            &主人公手札,,
            &自分手札,,
            話者,自分プレイヤー
            セリフ,カードを配るわね。
            セリフ削除
            while,&主人公手札.Count,<,2
            {
            イベント実行,主人公カードドロー,
            }
            イベント実行,自分カードドロー,
            イベント実行,自分裏向きカードドロー
            イベント実行,ブラックジャックボタン配置
            セリフ,もう一枚引くか、その手札で勝負するか決めなさい。
            while,true
            {
                ボタン付加,$スタンドボタンID,$ヒットボタンID
                ボタン待ち
                switch,選択肢,
                case,$ヒットボタンID,
                {
                    イベント実行,主人公カードドロー,
                    イベント実行,自分追加ドロー判断
                }
                case,$スタンドボタンID,
                {
                    
                    イベント実行,自分全カードオープン,
                }
            }
        }
        

    @主人公カードドロー
        &カード数字,=,@Draw(&山札)
        &山札,-=,&カード数字,
        &主人公手札,+=,&カード数字,
        イベント実行,表向きカード配置,(&カード数字,$主人公ソーターID,$始点id)

    @自分カードドロー
        &カード数字,=,@Draw(&山札)
        &山札,-=,&カード数字,
        &自分手札,+=,&カード数字,
        イベント実行,表向きカード配置,(&カード数字,$自分ソーターID,$始点id)

    @自分裏向きカードドロー
        &カード数字,=,@Draw(&山札)
        &山札,-=,&カード数字,
        &自分手札,+=,&カード数字,
        イベント実行,裏向きカード配置,(&カード数字,$自分ソーターID,$始点id)        

    @自分追加ドロー判断
        if,@BlackjackSum(&自分手札),<,17
        {
            イベント実行,自分裏向きドロー
        }
        デバッグ,{&自分手札}

    @自分全カードオープン
        $count,=,1
        while,$count,<,&自分手札.Count,
        {
            括弧文字列抜き出し,&自分手札,$count,&カード数字,
            イベント実行,表向きカード配置,(&カード数字,$自分ソーターID,$始点id)        
            $count,+=,1
        }


    @ブラックジャックボタン配置
        画像,$スタンドボタンID,&&ボタン背景青,
        画像,$ヒットボタンID,&&ボタン背景赤,
        画像縦横比不保持,$スタンドボタンID,$ヒットボタンID
        画像アンカー,$スタンドボタンID,(0.7,0.3),(0.95,0.4)
        画像アンカー,$ヒットボタンID,(0.7,0.19),(0.95,0.29)
        テキスト画像,$スタンドボタンID+1,勝負！
        テキスト画像,$ヒットボタンID+1,もう一枚引く
        親子化,$スタンドボタンID,$スタンドボタンID+1
        親子化,$ヒットボタンID,$ヒットボタンID+1



//以下スピードのもの。うっかりドロー処理を消したので動かない。
    @スピード_スタート    
        while,$主人公手札枚数,<,5
        {
            イベント実行,主人公カードドロー,
        }
        セリフ,それがあなたの手札よ。
        セリフ,ルールは簡単、場にあるカードに続く数字のカードを出せばいいの。
        セリフ,ただし早いもの順だから、わたしよりあとに出してもダメ。\nそのときは新しく出てきた数字の次の数字を出すことね。
        while,$相手手札枚数,<,5
        {
            イベント実行,相手カードドロー,
        }
        セリフ削除,
        
        イベント実行,主人公場札出し左
        イベント実行,相手場札出し右
        while,$相手残り枚数+$相手手札枚数,>,0,&&,$主人公残り枚数+$主人公手札枚数,>,0
        {
            全子供ボタン付加,$主人公ソーターID
            ボタン付加,$場送りボタンID
            if,$待ち時間,==,0
            {
                if,@CanPlace場札(&主人公手札),==,0,
                {
                    $待ち時間,=,2,
                }else{
                    if,@CanPlace場札(&相手手札),==,0,
                    {
                        $待ち時間,=,5
                    }else{
                        乱数生成,$相手待ち時間下限,$相手待ち時間上限
                        $待ち時間,=,乱数,
                    }
                }
            }
            ボタン待ち,$待ち時間
            switch,選択肢,
            $待ち時間,=,0
            case,-1
            {
                if,@CanPlace場札(&相手手札),==,0,&&,@CanPlace場札(&主人公手札),==,0,
                {
                    イベント実行,主人公場札出し左
                    イベント実行,相手場札出し右
                }else{
                    イベント実行,相手手札から場札
                }
            }
            case,$場送りボタンID
            {
                イベント実行,相手可能な限り場札
                イベント実行,主人公場札出し左
                イベント実行,相手場札出し右
            }
            default
            {
                if,@場札判定(選択肢,$場札左),==,1,
                {
                    イベント実行,主人公手札から場札左,選択肢,
                    イベント実行,主人公カードドロー
                    continue
                }else{
                    if,@場札判定(選択肢,$場札右),==,1,
                    {
                        イベント実行,主人公手札から場札右,選択肢
                        イベント実行,主人公カードドロー
                        continue
                    }else{
                        SE,&&エラーSE,
                        $待ち時間,=,残り選択時間
                    }
                }
            }
        }
        if,$主人公残り枚数+$主人公手札枚数,==,0
        {
            アラート,プレイヤーの勝利！
        }else{
            アラート,相手プレイヤーの勝利！
        }


    @主人公場札出し左
        if,$主人公残り枚数,==,0
        {
            括弧文字列改変ランダム抜き出し,&主人公手札,&トランプ数字,
            親子化解除,$主人公ソーターID,&トランプ数字+10
            画像アンカー,&トランプ数字+10,&場札左座標min,&場札左座標max
            $主人公手札枚数,-=,1
            $場札左,=,&トランプ数字
            イベント終了
        }
        括弧文字列改変ランダム抜き出し,&主人公山札,&トランプ数字
        括弧文字列抜き出し,&トランプ全画像,&トランプ数字,&トランプ画像,
        $場札左,=,&トランプ数字
        $主人公残り枚数,-=,1
        $画像id,=,&トランプ数字+10
        画像,$画像id,&トランプ画像,
        画像アンカー,$画像id,&場札左座標min,&場札左座標max

    @相手場札出し右
        乱数生成,1,$相手残り枚数,
        括弧文字列改変抜き出し,&相手山札,乱数,&トランプ数字
        括弧文字列抜き出し,&トランプ全画像,&トランプ数字,&トランプ画像,
        $場札右,=,&トランプ数字
        $相手残り枚数,-=,1
        $画像id,=,&トランプ数字+10
        画像,$画像id,&トランプ画像,
        画像アンカー,$画像id,&場札右座標min,&場札右座標max

    @主人公手札から場札左
        $選択カード,=,_#1-10
        括弧文字列インデックス代入,&主人公手札,$選択カード,$インデックス
        括弧文字列RemoveAt,&主人公手札,$インデックス
        親子化解除,$主人公ソーターID,_#1
        画像アンカー,_#1,&場札左座標min,&場札左座標max
        $主人公手札枚数,-=,1
        $場札左,=,_#1-10
        デバッグ,<color=red>主人公の出した場札右{$場札左}

    @主人公手札から場札右
        $選択カード,=,_#1-10
        括弧文字列インデックス代入,&主人公手札,$選択カード,$インデックス
        括弧文字列RemoveAt,&主人公手札,$インデックス
        親子化解除,$主人公ソーターID,_#1
        画像アンカー,_#1,&場札右座標min,&場札右座標max
        $主人公手札枚数,-=,1
        $場札右,=,_#1-10
        デバッグ,<color=red>主人公の出した場札右{$場札右}

    @相手手札から場札
        $count,=,0
        while,$count,<,$相手手札枚数
        {
            $count,+=,1
            括弧文字列抜き出し,&相手手札,$count,&判定札,
            $画像id,=,&判定札+10
            if,@場札判定($画像id,$場札左),==,1
            {
                括弧文字列RemoveAt,&相手手札,$count
                親子化解除,$相手ソーターID,$画像id
                画像アンカー,$画像id,&場札左座標min,&場札左座標max
                $相手手札枚数,-=,1
                $場札左,=,$画像id-10
                イベント実行,相手カードドロー
                break
            }else{
                if,@場札判定($画像id,$場札右),==,1
                {
                    括弧文字列RemoveAt,&相手手札,$count
                    親子化解除,$相手ソーターID,$画像id
                    画像アンカー,$画像id,&場札右座標min,&場札右座標max
                    $相手手札枚数,-=,1
                    $場札右,=,$画像id-10
                    イベント実行,相手カードドロー
                    break
                }
            }
        }

    @相手可能な限り場札
        $count,=,0
        while,$count,<,$相手手札枚数
        {
            $count,+=,1
            括弧文字列抜き出し,&相手手札,$count,&判定札,
            $画像id,=,&判定札+10
            if,@場札判定($画像id,$場札左),==,1
            {
                括弧文字列RemoveAt,&相手手札,$count
                親子化解除,$相手ソーターID,$画像id
                画像アンカー,$画像id,&場札左座標min,&場札左座標max
                $相手手札枚数,-=,1
                $場札左,=,$画像id-10
                イベント実行,相手カードドロー
                $count,=,0
            }else{
                if,@場札判定($画像id,$場札右),==,1
                {
                    括弧文字列RemoveAt,&相手手札,$count
                    親子化解除,$相手ソーターID,$画像id
                    画像アンカー,$画像id,&場札右座標min,&場札右座標max
                    $相手手札枚数,-=,1
                    $場札右,=,$画像id-10
                    イベント実行,相手カードドロー
                    $count,=,0
                }
            }
        }    


    @場札判定
        $トランプID,=,_#1 - 10
        $トランプマーク,=,$トランプID / 13
        $出し札数字,=,$トランプID - 13*$トランプマーク,
        if,$出し札数字,==,0
        {
            $出し札数字,=,13
        }
        $トランプID,=,_#2
        $トランプマーク,=,$トランプID / 13
        $場札数字,=,$トランプID - 13*$トランプマーク,
        if,$場札数字,==,0
        {
            $場札数字,=,13
        }
        デバッグ,出し札{$出し札数字}:場札{$場札数字}、{_#1}:{_#2}
        if,$出し札数字,==,$場札数字+1,||,$出し札数字,==,$場札数字-1,
        {
            return,1
        }else{
            return,0
        }

    @CanPlace場札
        //_#は検討したいカードの括弧文字列
        $count,=,0
        while,$count,<,_#1.Count,
        {
            括弧文字列抜き出し,_#1,$count,&トランプ数字
            if,@場札判定(&トランプ数字,$場札右),==,1,||,@場札判定(&トランプ数字,$場札左),==,1
            {
                //デバッグ,{&トランプ数字}は出せる
                return,1
            }
            //デバッグ,{&トランプ数字}は出せない
        }
        デバッグ,{_#1}に出せるカードなし
        return,0

