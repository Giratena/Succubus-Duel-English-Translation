default
@情報収集
    中央メニュー生成,Investigate,EventList/Info

@ショップ
    ショップ画面生成,Shop1    

@デッキ編集
    デッキ編集画面生成

@タイトルに戻る
    選択肢,タイトルに戻る,やっぱりやめる
    if,選択肢,==,1
    {
        場所移動,&&場所タイトル
    }

@ニューゲーム
    中央メニュー生成,シナリオ選択,EventList/Senario

@特殊オプション
    中央メニュー生成,Special Options,EventList/SpecialOption


@ロード
    ロード画面生成


@セーブ
    セーブ画面生成

@ゲーム終了
    ゲーム終了

@イベント回想
    中央メニュー生成,回想,EventList/Renoun


@クエスト
    中央メニュー生成,クエスト,EventList/Quest


@場所移動
    中央メニュー生成,場所移動,EventList/Place

@言語切り替え
    フォルダ一覧代入,CSV/Language,&フォルダ,
    配列変数選択肢,日本語,&フォルダ
    if,選択肢,==,1
    {
        説明,言語が日本語に設定されました。
        説明,翻訳をする場合にはCSV/Languageの中にフォルダを作り、Englishフォルダの中のテキストをすべてコピーしてその中に入れてください。そのあと、日本語の横に翻訳したい言語の言葉を書いてください。文中ではカンマは使用できないため、「；」を使ってください。
        言語設定解除
    }
    if,選択肢,>=,2
    {
        括弧文字列抜き出し,&フォルダ,選択肢-1,&抜き出し
        言語設定,&抜き出し
        説明,The language has been set to English.
        説明,To translate; open the text in CSV/Language/English and write the English text next to the comma. If you want to use commas in English text; please use semicolons.
    }

@Mod割り当て
    説明,Modフォルダを作成し、その中にModをひとまとめにしたフォルダを入れると適用の切り替えができる機能です。
    説明,現在Pictureの張替えには対応していません。CSVフォルダ内のみを書き換えます。
    説明,注意事項：Mod割り当て画面で「適用」を押すとCSVフォルダの中身をModに合わせて変更します。その際にCSVフォルダの中身は完全に初期化されてしまうため、もしもCSVフォルダに変更を加えている場合、その変更はすべて失われます。
    説明,Mod作業を行っている方は、CSVフォルダのバックアップを取ったうえで「適用」を押してください。
    Mod割り当て画面生成

@オプション難易度変更
    説明,難易度を変更することができます。
    説明,難易度は\nハード（敵のパラメーター3割増加）\nノーマル\nイージー（敵のパラメータ2割減少）\nらくらく（味方のHP+2000Atk+800）\nの3つの中から選択できます。難易度は何度でも変更可能です。難易度によって見れるエロシーンに変化はありません。
    アラート,難易度を選択してください(現在の難易度:{難易度名})。
    選択肢,ハード,ノーマル,イージー,らくらくモード
    if,選択肢,==,1
    {
        アラート,難易度をハードに変更しました。
        説明,ハードでは相手の能力が上がるほか、一部敵カードに効果が追加される場合があります。
        説明,ただしハードモードは難易度を上げるための機能であり、ハード限定のエロシーンは一切ありません。高難易度を楽しむためにご利用ください。
        難易度変更,難易度ハード,
    }
    if,選択肢,==,2
    {
        アラート,難易度をノーマルに変更しました。
        難易度変更,難易度ノーマル,
    }
    if,選択肢,==,3
    {
        アラート,難易度をイージーに変更しました。
        アラート,イージーでは相手の能力が下がるほか、一部敵カードの効果が変更になる場合があります。
        難易度変更,難易度イージー,
    }
    if,選択肢,==,4
    {
        アラート,難易度をらくらくモードに変更しました。
        アラート,らくらくモードでは相手の能力が下がるほか、一部敵カードの効果が変更になる場合があります。
        アラート,またバトル中３回だけ、数枚の強力なカードの中から１枚生成して手札に加えることができます。
        難易度変更,難易度らくらく,
    }

@オプション弱点無効
    説明,主人公にイベントで付与された弱点を一時的に無効にできます。
    説明,無効にされるのはストーリー中に付与された弱点だけです。戦闘中に付与される状態異常は無効になりません。
    選択肢,弱点を一時的に無効にする,弱点を有効にする
    if,選択肢,==,1
    {
        主人公弱点無効化
    }
    if,選択肢,==,2
    {
        主人公弱点有効化
    }

@オプション弱点全解除
    説明,主人公にイベントで付与された弱点をすべて解除します。
    説明,解除された弱点は元に戻せないのでご注意ください。
    選択肢,弱点をすべて解除する,しない
    if,選択肢,==,1
    {
        アラート,本当にいいですか？
        選択肢,はい,いいえ
        if,選択肢,==,1
        {
            主人公攻撃タイプ弱点全解除
            主人公キャラ弱点全解除
            アラート,主人公に付与された弱点をすべてリセットしました。
        }
    }

@オプション攻撃力の復活
    $攻撃力,=,980 + 20*主人公レベル
    説明,主人公の攻撃力が低下している場合、攻撃力を1000に戻すことができます。
    選択肢,攻撃力をレベル相応({$攻撃力})に戻す,,いまのままにする
    if,選択肢,==,1
    {
        if,主人公攻撃力,<,$攻撃力
        {
            主人公攻撃力設定,$攻撃力
            アラート,主人公の攻撃力が{$攻撃力}に設定されました。
        }else{
            アラート,現在の攻撃力が{$攻撃力}以上あるため変更されませんでした。
        }   
    }

@オプション自動文字送り設定
    説明,自動文字送りを設定できます。メッセージの表示が終わってから一定時間で次のセリフに進むようになります。
    アラート,自動文字送りを有効にするか選んでください
    選択肢,無効にする,有効にする
    if,選択肢,==,1
    {
        自動文字送り設定,0,
        アラート,文字送りが無効になりました。
    }
    if,選択肢,==,2
    {
        文字入力,フレーム数を入力してください,
        自動文字送り設定,&&InputtedText,
        アラート,文字送りが有効になりました。
    }
    
@オプションBGM音量調整
    アラート,BGMの音量を変更できます
    選択肢,変更する,変更しない,
    if,選択肢,==,1
    {
        文字入力,ボリュームを入力してください(-80~0)
        BGM音量設定,&&InputtedText
        アラート,BGMのボリュームが変更されました。
    }
    

@オプションSE音量調整
    アラート,SEの音量を変更できます。
    選択肢,変更する,変更しない,
    if,選択肢,==,1
    {
        文字入力,ボリュームを入力してください(-80~0)
        SE音量設定,&&InputtedText
        アラート,SEのボリュームが{&&InputtedText}に変更されました。
    }

@オプション主人公の能力上限
    説明,主人公のHPと攻撃力に一定の上限を設定できます。主に難易度を上げるために利用できる機能です。
    説明,この機能を利用したとしてもバトル開始時のステータスが変更されるだけでレベルそのものに影響はありません。機能を解除することでいつでも本来のレベルのステータスに戻ることができます。
    アラート,能力制限を入れるか選んでください
    選択肢,制限をしない,HP6000/Atk1000,HP8000/Atk1300,
    if,選択肢,==,1
    {
        アラート,能力制限をしないモードになりました。HPと攻撃力はレベルによって決まります。
        主人公攻撃力制限,-1
        主人公HP制限,-1
    }
    if,選択肢,==,2
    {
        アラート,主人公の能力上限をHP6000,Atk1000に設定しました。
        主人公攻撃力制限,1000
        主人公HP制限,6000
    }
    if,選択肢,==,3
    {
        アラート,主人公の能力上限をHP8000,Atk1300に設定しました。
        主人公攻撃力制限,1300
        主人公HP制限,8000
    }

@オプションエロ系効果の表記
    説明,カード効果欄に「おっぱいに弱い付与」などの能力を記載するかどうか選択できます。                        
    選択肢,エロ系効果も表示する,エロ系効果は秘匿状態にする
    if,選択肢,==,1
    {
        エロ系効果表示設定,1
        アラート,エロ系効果もカードテキストに表示されるようになりました。
    }
    if,選択肢,==,2
    {
        エロ系効果表示設定,0
        アラート,エロ系効果はカードテキスト上で秘匿されるようになりました。
    }
        
@オプション未所持カード表示
    説明,ショップ画面で、パック内の未所持のカードも表示されるか設定できます（デフォルトでは非表示）。
    選択肢,未所持カードも表示する,未所持カードは秘匿状態にする
    if,選択肢,==,1
    {
        未所持カード表示設定,1
        アラート,未所持カードも含めてショップ画面から閲覧できるようになりました。
    }
    if,選択肢,==,2
    {
        未所持カード表示設定,0
        アラート,未所持カードはショップ画面では非表示になるように設定されました。
    }
        
@オプション主人公の名前変更
    説明,主人公の名前を変更できます。
    アラート,名前を変更しますか？        
    選択肢,はい,いいえ,
    if,選択肢,==,1
    { 
        文字入力,主人公の名前を入力してください,5,1
        主人公名前変更,{&&InputtedText},
        アラート,主人公の名前を{主人公}に変更しました。
    }

@オプション主人公の見た目変更

    説明,主人公の見た目を変更できます。
    アラート,見た目を変更しますか？
    選択肢,はい,いいえ
    if,選択肢,==,1
    {
        アラート,主人公の見た目を選択してください。
        画像選択肢,&&顔候補1画像,&&顔候補2画像,&&顔候補3画像,&&顔候補4画像,&&顔候補5画像,
        主人公顔グラ変更,&&SelectedSprite
        アラート,主人公の見た目が決定されました。この内容はいつでも変更できます。
    }

@オプション文字音変更
    説明,文字が表示されるときの音をミュートにできます。
    選択肢,文字音1（デフォルト）,音をなくす,
    if,選択肢,==,1
    {
        文字音設定,&&文字1SE
        説明,文字音を１に設定しました。
    }
    if,選択肢,==,2
    {
        文字音設定,
        説明,文字音を無音に設定しました。
    }
    if,選択肢,==,3
    {
        アラート,文字音を2に設定しました。
        文字音設定,&&文字2SE
    }
    if,選択肢,==,3
    {
        アラート,文字音を3に設定しました。
        文字音設定,&&文字3SE
    }
    if,選択肢,==,4
    {
        アラート,文字音を4に設定しました。
        文字音設定,&&文字4SE
    }
    
@オプション回想イベント無害化
    

@プレイヤー情報
    情報,主人公の情報,{プレイヤー情報}



@アニメ回想
    $配列位置,=,1
    $旧配列位置,=,0
    
    &師匠アニメ,(EU1_MaidAPaizuri,EU1_Maid_Cum,EU2_paizuriAnime,EU3_paizuriAnime)
    &スライムサキュバスアニメ,(EU5_thighJobAnime,slime_bigBreastPaizuri,slime_superBigBreastPaizuri,EU7_paizuriAnime,EU8_handJobAnime,F2_FootJobAnime (1))
    &エルルアニメ,(EU17_paizuriAnime,EP06_HandJob (1)),
    &試験官アニメ,(EU18_PaizuriAnime,EU18_PaizuriAnime2,EU19_handJobAnime,EP07_PaizuriAnime),
    &シスターアニメ,(EU21_PaizuriAnime,EU22_paizuriAnime)
    &フレアアニメ,(EU29_blowJobAnime,EU30_handJobAnime,F9_paizuriAnime)
    &ムニンアニメ,(EU28_Paizuri)
    &フラワーアニメ,(EU31_paizuriAnime,EU32_pafupafuAnime,F11_bustShowAnime,F11_paizuriWing)
    &オクタアニメ,(EU24_sexAnime,EU25_paizuri,EU26_footJobAnime,F14_footJobAnime)
    &ミレーヌアニメ,(EU34_paizuri,EU35_paizuri,EU36_paizuriAnime,F13_paizuriAnime)
    &パトラアニメ,(EU37_paizuri,EU38_pafupafu,EU39_paizuri,EU42_thighJob,F16_hipJob)
    &キャミーアニメ,(EU50_pafupafuAnime,EU51_pafupafuAnime,EU51_paizuriAnime,EU52_paizuriAnime,EU52_paizuriAnime2,F17_paizuriAnime,F17_bustShowAnime)
    &ネネコアニメ,(EU40_paizuriAnime,EU42_paizuriAnime,EU45_paizuriAnime,F18_paizuriAnime)
    &ヤツメアニメ,(EU47_bustShake,EU48_oppai,EU48_paizuriAnime,EU48_paizuriBindAnime,EU49_footJob,F20_thighJobAnime,F20_bindThighJobAnime)
    &ムサシアニメ,(F21_armpitJobAnime,F21_paizuriAnime)
    &エイライラアニメ,(EU43_paizuriAnime,EU44_handJobAnime,EU46_kneeJobAnime,F19_paizuriAnime)
    &メロディアニメ,(EU82_blowJob,EU83_bustShakeAnime,EU83_paizuriAnime,EU84_footJobAnime,EU81_paizuri,F22_bustShakeAnime,F22_paizuriAnime)
    &ネクロアニメ,(EU53_paizuriAnime,EU54_footJobAnime,EU55_thighJobAnime,EU56_handJobAnime,F23_paizuriAnime)
    &ジェミニアニメ,(EU62_paizuriAnime,EU63_blowJobAnime,EU64_paizuriAnime,EU64_paizuriFlashAnime,EU61_tailJobAnime,F24_paizuriAnime)
    &リュカアニメ,(EU58_bustZoomAnime,EU59_paizuriAnime,EU59_paizuriAuraAnime,EU60_handJobAnime,NPC9_paizuriAnime,F25_bustShakeAnime,F25_paizuriAnime)
    &シルヴィアアニメ,(EU67_footJobAnime,EU68_paizuriAnime,EU68_paizuri2Anime,EU85_handJobAnime,EU69_cowgirlAnime,EU69_cowgirl2Anime,F26_bustShakeAnime,F26_paizuriAnime)
    &サキュバスエルルアニメ,(EU57_footShakeAnime,EU57_bustShakeAnime,EU57_paizuriAnime,EU71_bustShakeAnime,EU71_paizuriAnime,EU72_bustShakeAnime,EU72_bustShowShakeAnime,EU72_paizuriAnime,EU70_bustShakeAnime,EU70_handJobAnime,F27_bustShakeAnime,F27_kissAnime,F27_handJobAnime,F27_paizuriAnime)
    
    &スキップ位置,+=,&アニメ一覧.Count+1
    &アニメ一覧,+=,&師匠アニメ,
    if,$$スライム戦勝利,==,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&スライムサキュバスアニメ,
    }
    if,$$エルル会ったことがある,>=,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&エルルアニメ,
    }
    if,$$Eランク昇格試験勝利,==,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&試験官アニメ
    }
    if,$$シスター戦闘済み,==,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&シスターアニメ
    }
    if,$$フレア戦闘済み,==,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&フレアアニメ
    }
    if,$$ムニン戦闘済み,==,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ムニンアニメ
    }
    if,$$Dランク昇格試験勝利,>=,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&フラワーアニメ
    }
    if,$$闘技場勝利数,>=,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&オクタアニメ
    }
    if,$$闘技場勝利数,>=,2,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ミレーヌアニメ
    }
    if,$$闘技場勝利数,>=,4,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&パトラアニメ
    }
    if,$$闘技場勝利数,>=,5,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&キャミーアニメ
    }
    if,$$闘技場勝利数,>=,6,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ネネコアニメ
    }
    if,$$闘技場勝利数,>=,7,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ヤツメアニメ
    }
    if,$$エイライラ先生イベント,>=,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&エイライラアニメ    
    }
    if,$$闘技場勝利数,>=,8,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ムサシアニメ
    }
    if,$$闘技場勝利数,>=,9,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&メロディアニメ
    }
    if,$$ネクロクエストクリア,>=,1,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ネクロアニメ
    }
    if,$$闘技場勝利数,>=,10,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&ジェミニアニメ
    }
    if,$$闘技場勝利数,>=,11,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&リュカアニメ
    }
    if,$$闘技場勝利数,>=,12,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&シルヴィアアニメ
    }
    if,$$サキュバスエルル戦勝利,>=,2,||,$$地下通路説明完了,==,1,||,$$周回数,>,0
    {
        &スキップ位置,+=,&アニメ一覧.Count+1
        &アニメ一覧,+=,&サキュバスエルルアニメ
    }
    
    $アニメ総数,=,&アニメ一覧.Count,
    
    背景,&&グレー背景
    画像,1001,&&UI左矢印,
    画像,1002,&&UI右矢印,
    画像,1003,&&閉じるアイコン,
    画像アンカー,1001,(0.02,0.4),(0.1,0.6)
    画像アンカー,1002,(0.9,0.4),(0.98,0.6),
    画像アンカー,1003,(0.9,0.9),(0.98,0.98),
    画像,1004,&&ボタン背景赤,
    画像,1005,&&ボタン背景青,
    画像,1006,&&ボタン背景緑,
    画像縦横比不保持,1004,1005,1006
    画像アンカー,1004,(0.9,0.02),(0.98,0.14)
    画像アンカー,1005,(0.9,0.15),(0.98,0.27)
    画像アンカー,1006,(0.9,0.28),(0.98,0.4)
    テキスト画像,1007,ダメージ
    テキスト画像,1008,速度－
    テキスト画像,1009,速度＋
    親子化,1004,1007
    親子化,1005,1008
    親子化,1006,1009
    画像,1010,&&UIスキップ左矢印,
    画像,1011,&&UIスキップ右矢印,
    画像アンカー,1010,(0.02,0.62),(0.1,0.82)
    画像アンカー,1011,(0.9,0.62),(0.98,0.82)
    画像,1012,&&ボタン背景赤,
    画像縦横比不保持,1012
    画像アンカー,1012,(0.8,0.02),(0.88,0.14)
    テキスト画像,1013,射精
    親子化,1012,1013

    while,true
    {
        if,$旧配列位置,!=,$配列位置,
        {
            ループダメージ停止
            $ループダメージオン,=,0
            $現在速度,=,0
            括弧文字列抜き出し,&アニメ一覧,$配列位置,&アニメ名,
            アニメ再生,&アニメ名
            $旧配列位置,=,$配列位置
        }
        ボタン付加,1001,1002,1003,1004,1005,1006,1010,1011,1012
        ボタン待ち
        if,選択肢,==,1001
        {
            $配列位置,-=,1
            if,$配列位置,<=,0
            {
                $配列位置,=,1
            }
        }
        if,選択肢,==,1002
        {
            $配列位置,+=,1
            if,$配列位置,>=,$アニメ総数
            {
                $配列位置,=,$アニメ総数
            }
        }
        if,選択肢,==,1010
        {
            $配列位置,=,@GetNextSmaller(&スキップ位置,$配列位置)
            if,$配列位置,<=,0
            {
                $配列位置,=,1
            }
        }
        if,選択肢,==,1011
        {
            
            $配列位置,=,@GetNextBigger(&スキップ位置,$配列位置)
            if,$配列位置,>=,$アニメ総数
            {
                $配列位置,=,$アニメ総数
            }
        }
        if,選択肢,==,1003
        {
            画像全削除
            break
        }
        if,選択肢,==,1004
        {
            if,$ループダメージオン,!=,1
            {
                $ループダメージオン,=,1
                ループダメージ,,100,
                ループダメージ加速,0.2*$現在速度   
            }else{
                $ループダメージオン,=,0
                ループダメージ停止
            }
        }
        if,選択肢,==,1005
        {
            ループダメージ加速,-0.1
            アニメ加速,-0.2
            $現在速度,-=,1
        }
        if,選択肢,==,1006
        {
            ループダメージ加速,0.1
            アニメ加速,0.2
            $現在速度,+=,1
        }
        if,選択肢,==,1012
        {
            射精
        }
    }

@GetNextSmaller
    //引数1:配列、引数2：現在の数字
    //配列のなかで引数２に最も近い小さい数を返す。なければ一番小さい数を返す
    $tempIndex,=,_#1.Count
    while,0,<,$tempIndex,
    {
        括弧文字列抜き出し,_#1,$tempIndex,&result,
        if,&result,<,_#2
        {
            return,&result
        }
        $tempIndex,-=,1
    }
    return,&result

@GetNextBigger
    //引数1:配列、引数2：現在の数字
    //配列のなかで引数２に最も近い大きい数を返す。なければ一番大きい数を返す
    $tempIndex,=,1
    &result,,
    while,_#1.Count,>=,$tempIndex,
    {
        括弧文字列抜き出し,_#1,$tempIndex,&result,
        if,&result,>,_#2
        {
            return,&result
        }
        $tempIndex,+=,1
    }
    return,&result


@再戦
    &師匠,(%%70002)
    &スライムサキュバス,(%%70003)
    &プラント,(%%70004),
    &タイガ,(%%70005),
    &エルル,(%%70006),
    &試験官,(%%70007),
    &シスター,(%%70008),
    &フレア,(%%70009)
    &ムニン,(%%70010)
    &フラワー,(%%70011)
    &オクタ,(%%70014)
    &ミレーヌ,(%%70013)
    &ドワン,(%%70015)
    &パトラ,(%%70016)
    &キャミー,(%%70017)
    &ネネコ,(%%70018)
    &ヤツメ,(%%70020)
    &エイライラ,(%%70019)
    &ムサシ,(%%70021)
    &メロディ,(%%70022)
    &ネクロ,(%%70023)
    &ジェミニ,(%%70024)
    &リュカ,(%%70025)
    &シルヴィア,(%%70026)
    &サキュバスエルル,(%%70027)
    
    &一覧,,
    &スキップ位置,,
    &スキップ位置,+=,&一覧.Count+1
    &一覧,+=,&師匠,
    if,$$スライム戦勝利,==,1,||,$$地下通路説明完了,==,1,
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&スライムサキュバス,
    }
    if,$$プラント戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&プラント
    }
    if,$$タイガ戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&タイガ
    }
    if,$$エルル会ったことがある,>=,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&エルル,
    }
    if,$$Eランク昇格試験勝利,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&試験官
    }
    if,$$シスター戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&シスター
    }
    if,$$フレア戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&フレア
    }
    if,$$ムニン戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ムニン
    }
    if,$$Dランク昇格試験勝利,>=,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&フラワー
    }
    if,$$闘技場勝利数,>=,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&オクタ
    }
    if,$$闘技場勝利数,>=,2
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ミレーヌ
    }
    if,$$闘技場勝利数,>=,3
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ドワン
    }
    if,$$闘技場勝利数,>=,4
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&パトラ
    }
    if,$$闘技場勝利数,>=,5
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&キャミー
    }
    if,$$闘技場勝利数,>=,6
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ネネコ
    }
    if,$$闘技場勝利数,>=,7
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ヤツメ
    }
    if,$$エイライラ先生イベント,>=,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&エイライラ    
    }
    if,$$闘技場勝利数,>=,8
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ムサシ
    }
    if,$$闘技場勝利数,>=,9
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&メロディ
    }
    if,$$ネクロクエストクリア,>=,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ネクロ
    }
    if,$$闘技場勝利数,>=,10
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ジェミニ
    }
    if,$$闘技場勝利数,>=,11
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&リュカ
    }
    if,$$闘技場勝利数,>=,12
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&シルヴィア
    }
    if,$$サキュバスエルル戦勝利,>=,2
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&サキュバスエルル
    }

    $画像id用プラス,=,100
    &画像表示用コマンド文字列,,
    &画像表示用コマンド文字列,+=,(($ソーターid,=,2))
    &画像表示用コマンド文字列,+=,((ソーター,$ソーターid,グリッド,(0.15,0.4),(0.85,0.6)))
    &画像表示用コマンド文字列,+=,((ソーター一行グリッド数,$ソーターid,5))
    &画像表示用コマンド文字列,+=,((背景,&&グレー背景,))
    &画像表示用コマンド文字列,+=,((画像,1001,&&UI左矢印,))
    &画像表示用コマンド文字列,+=,((画像,1002,&&UI右矢印,))
    &画像表示用コマンド文字列,+=,((画像,1003,&&閉じるアイコン,))
    &画像表示用コマンド文字列,+=,((画像アンカー,1001,(0.02,0.4),(0.1,0.6)))
    &画像表示用コマンド文字列,+=,((画像アンカー,1002,(0.9,0.4),(0.98,0.6),))
    &画像表示用コマンド文字列,+=,((画像アンカー,1003,(0.9,0.9),(0.98,0.98),))
    &画像表示用コマンド文字列,+=,(($画像id用プラス,=,100))
    
    コマンド文字列実行,&画像表示用コマンド文字列

    $配列位置,=,1
    $ページ内項目数,=,5
    $旧配列位置,=,0
    
    while,true
    {
        if,$旧配列位置,!=,$配列位置,
        {
            $旧配列位置,=,$配列位置
            $count,=,0
            子画像全削除,$ソーターid
            while,$count,<,$ページ内項目数
            {
                
                括弧文字列抜き出し,&一覧,$配列位置+$count,&カード
                %カード,=,&カード
                $画像id,=,$配列位置+$count+$画像id用プラス
                画像,$画像id,%カード.&カード画像
                親子化,$ソーターid,$画像id
                $count,+=,1
                if,$配列位置+$count,>,&一覧.Count
                {
                    break
                }
            }
        }
        ボタン付加,1001,1002,1003,
        全子供ボタン付加,$ソーターid
        ボタン待ち
        switch,選択肢
        case,1001
        {
            $配列位置,-=,$ページ内項目数
            if,$配列位置,<=,0
            {
                $配列位置,=,1
            }
        }
        case,1002
        {
            if,&一覧.Count,>=,$配列位置+$ページ内項目数
            {
                $配列位置,+=,$ページ内項目数
            }
        }
        case,1003
        {
            画像全削除
            break
        }
        default
        {
            括弧文字列抜き出し,&一覧,選択肢-$画像id用プラス,&カード,
            %カード,=,&カード
            画像全削除
            イベント実行,回想詳細ウインドウ生成,(%カード,1000)
            コマンド文字列実行,&画像表示用コマンド文字列
            $旧配列位置,=,0
        }
    }
    

@回想詳細ウインドウ生成
    //_#1:カード、_#2:基礎画像idプラス
    イベント実行,回想詳細ウインドウ画像表示,_#1,_#2
    while,true
    {
        ボタン付加,$閉じるボタンid
        全子供ボタン付加,$詳細ウインドウソーターid
        ボタン待ち
        switch,選択肢,
        case,$閉じるボタンid
        {
            画像全削除
            break
        }
        case,$イベントバトルボタンid
        {
            //グローバル変数は回想モードON状態だと変更できなくなるのでコマンドの順番に注意
            $$回想スキップ,=,0
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,イベント
        }
        case,$イベントバトルスキップボタンid
        {
            $$回想スキップ,=,1
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,イベント
        }
        case,$闘技場バトルボタンid
        {
            $$回想スキップ,=,0
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,闘技場イベント
        }
        case,$闘技場バトルスキップボタンid
        {
            $$回想スキップ,=,1
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,闘技場イベント
        }
        case,$街バトルボタンid
        {
            $$回想スキップ,=,0
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,フィールドイベント
        }
        case,$街バトルスキップボタンid
        {
            $$回想スキップ,=,1
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,フィールドイベント
        }
        case,$クエストバトルボタンid
        {
            $$回想スキップ,=,0
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,クエストイベント
        }
        case,$クエストバトルスキップボタンid
        {
            $$回想スキップ,=,1
            回想モードON,
            画像全削除
            外部イベント実行変数パス,%カード.ファイルパス,クエストイベント
        }
        回想モードOFF,
        $$回想スキップ,=,0,
        フェードイン,
        画像全削除
        break
    }
    画像全削除

@回想詳細ウインドウ画像表示
    //回想詳細ウインドウ生成内で使わないとバグる。変数も相互に依存がある。
    
    背景,&&グレー背景,

    $閉じるボタンid,=,1003+_#2
    画像,$閉じるボタンid,&&閉じるアイコン,
    画像アンカー,$閉じるボタンid,(0.9,0.9),(0.98,0.98),

    $カード画像id,=,1004 + _#2

    %カード,=,_#1
    画像,$カード画像id,%カード.&カード画像,
    画像アンカー,$カード画像id,(0,0),(0.5,1)
    
    $詳細ウインドウソーターid,=,1005 +_#2
    ソーター,$詳細ウインドウソーターid,縦型,(0.55,0.05),(0.85,0.95)
    
    $ボタンid,=,1006
    $闘技場バトルボタンid,=,$ボタンid + _#2
    $闘技場バトルスキップボタンid,=,$ボタンid + 2 + _#2
    $イベントバトルボタンid,=,$ボタンid + 4 + _#2
    $イベントバトルスキップボタンid,=,$ボタンid + 6 + _#2
    $街バトルボタンid,=,$ボタンid + 8 + _#2
    $街バトルスキップボタンid,=,$ボタンid + 10 + _#2
    $クエストバトルボタンid,=,$ボタンid + 12 + _#2
    $クエストバトルスキップボタンid,=,$ボタンid + 14 + _#2
    &ボタン画像,&&選択肢背景
    
    if,%カード.?HasSection:闘技場イベント.Count,>,0
    {
        画像,$闘技場バトルボタンid,&ボタン画像,
        画像縦横比不保持,$闘技場バトルボタンid
        親子化,$詳細ウインドウソーターid,$闘技場バトルボタンid
        テキスト画像,$闘技場バトルボタンid + 1,闘技場バトル回想\n(イベントあり)
        親子化,$闘技場バトルボタンid,$闘技場バトルボタンid + 1
        
        画像,$闘技場バトルスキップボタンid,&ボタン画像,
        画像縦横比不保持,$闘技場バトルスキップボタンid
        親子化,$詳細ウインドウソーターid,$闘技場バトルスキップボタンid
        テキスト画像,$闘技場バトルスキップボタンid + 1,闘技場バトル回想\n(イベント省略)
        親子化,$闘技場バトルスキップボタンid,$闘技場バトルスキップボタンid + 1
    }
    if,%カード.?HasSection:イベント.Count,>,0
    {
        画像,$イベントバトルボタンid,&ボタン画像,
        画像縦横比不保持,$イベントバトルボタンid
        親子化,$詳細ウインドウソーターid,$イベントバトルボタンid
        テキスト画像,$イベントバトルボタンid + 1,イベントバトル回想\n(イベントあり)
        親子化,$イベントバトルボタンid,$イベントバトルボタンid + 1
        
        画像,$イベントバトルスキップボタンid,&ボタン画像,
        画像縦横比不保持,$イベントバトルスキップボタンid
        親子化,$詳細ウインドウソーターid,$イベントバトルスキップボタンid
        テキスト画像,$イベントバトルスキップボタンid + 1,イベントバトル回想\n(イベント省略)
        親子化,$イベントバトルスキップボタンid,$イベントバトルスキップボタンid + 1
    }
    if,%カード.?HasSection:フィールドイベント.Count,>,0
    {
        画像,$街バトルボタンid,&ボタン画像,
        画像縦横比不保持,$街バトルボタンid
        親子化,$詳細ウインドウソーターid,$街バトルボタンid
        テキスト画像,$街バトルボタンid + 1,街バトル回想\n(イベントあり)
        親子化,$街バトルボタンid,$街バトルボタンid + 1

        //画像,$街バトルスキップボタンid,&ボタン画像,
        //画像縦横比不保持,$街バトルスキップボタンid
        //親子化,$詳細ウインドウソーターid,$街バトルスキップボタンid
        //テキスト画像,$街バトルスキップボタンid + 1,イベントバトル回想\n(イベント省略)
        //親子化,$街バトルスキップボタンid,$街バトルスキップボタンid+ 1
    }
    if,%カード.?HasSection:クエストイベント.Count,>,0
    {
        画像,$クエストバトルボタンid,&ボタン画像,
        画像縦横比不保持,$クエストバトルボタンid
        親子化,$詳細ウインドウソーターid,$クエストバトルボタンid
        テキスト画像,$クエストバトルボタンid + 1,クエストバトル回想\n(イベントあり)
        親子化,$クエストバトルボタンid,$クエストバトルボタンid + 1

        画像,$クエストバトルスキップボタンid,&ボタン画像,
        画像縦横比不保持,$クエストバトルスキップボタンid
        親子化,$詳細ウインドウソーターid,$クエストバトルスキップボタンid
        テキスト画像,$クエストバトルスキップボタンid + 1,クエストバトル回想\n(イベント省略)
        親子化,$クエストバトルスキップボタンid,$クエストバトルスキップボタンid+ 1
    }


@女性キャラクター図鑑
    &師匠,(%%70002,%%10001,%%10002,%%10003)
    &スライムサキュバス,(%%70003,%%10005,%%10006,%%10007,%%10008)
    &プラント,(%%70004,%%10016),
    &エルル,(%%70006,%%10017),
    &試験官,(%%70007,%%10018,%%10019,%%10020),
    &シスター,(%%70008,%%10021,%%10022,%%10023),
    &フレア,(%%70009,%%10029,%%10030)
    &ムニン,(%%70010,%%10027,%%10028)
    &フラワー,(%%70011,%%10031,%%10032,%%10033)
    &オクタ,(%%70014,%%10024,%%10025,%%10026)
    &ミレーヌ,(%%70013,%%10034,%%10035,%%10036)
    &パトラ,(%%70016,%%10037,%%10038,%%10039)
    &キャミー,(%%70017,%%10050,%%10051,%%10052)
    &ネネコ,(%%70018,%%10040,%%10041,%%10042,%%10045)
    &ヤツメ,(%%70020,%%10047,%%10048,%%10049)
    &エイライラ,(%%70019,%%10043,%%10044,%%10046)
    &ムサシ,(%%70021)
    &メロディ,(%%70022,%%10081,%%10082,%%10083,%%10084)
    &ネクロ,(%%70023,%%10053,%%10054,%%10055,%%10056)
    &ジェミニ,(%%70024,%%10061,%%10062,%%10063,%%10064)
    &リュカ,(%%70025,%%10058,%%10059,%%10060)
    &シルヴィア,(%%70026,%%10067,%%10068,%%10069,%%10085)
    &サキュバスエルル,(%%70027,%%10057,%%10070,%%10071,%%10072)
    
    &一覧,,
    &スキップ位置,,
    &スキップ位置,+=,&一覧.Count+1
    &一覧,+=,&師匠,
    if,$$スライム戦勝利,==,1,||,$$地下通路説明完了,==,1,
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&スライムサキュバス,
    }
    if,$$プラント戦闘済み,>=,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&プラント,
    }
    if,$$エルル会ったことがある,>=,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&エルル,
    }
    if,$$Eランク昇格試験勝利,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&試験官
    }
    if,$$シスター戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&シスター
    }
    if,$$フレア戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&フレア
    }
    if,$$ムニン戦闘済み,==,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ムニン
    }
    if,$$Dランク昇格試験勝利,>=,1,||,$$地下通路説明完了,==,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&フラワー
    }
    if,$$闘技場勝利数,>=,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&オクタ
    }
    if,$$闘技場勝利数,>=,2
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ミレーヌ
    }
    if,$$闘技場勝利数,>=,4
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&パトラ
    }
    if,$$闘技場勝利数,>=,5
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&キャミー
    }
    if,$$闘技場勝利数,>=,6
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ネネコ
    }
    if,$$闘技場勝利数,>=,7
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ヤツメ
    }
    if,$$エイライラ先生イベント,>=,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&エイライラ    
    }
    if,$$闘技場勝利数,>=,8
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ムサシ
    }
    if,$$闘技場勝利数,>=,9
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&メロディ
    }
    if,$$ネクロクエストクリア,>=,1
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ネクロ
    }
    if,$$闘技場勝利数,>=,10
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&ジェミニ
    }
    if,$$闘技場勝利数,>=,11
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&リュカ
    }
    if,$$闘技場勝利数,>=,12
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&シルヴィア
    }
    if,$$サキュバスエルル戦勝利,>=,2
    {
        &スキップ位置,+=,&一覧.Count+1
        &一覧,+=,&サキュバスエルル
    }

    $画像id用プラス,=,100
    &画像表示用コマンド文字列,,
    &画像表示用コマンド文字列,+=,(($ソーターid,=,2))
    &画像表示用コマンド文字列,+=,((ソーター,$ソーターid,グリッド,(0.15,0.2),(0.85,0.8)))
    &画像表示用コマンド文字列,+=,((ソーター一行グリッド数,$ソーターid,5))
    &画像表示用コマンド文字列,+=,((背景,&&グレー背景,))
    &画像表示用コマンド文字列,+=,((画像,1001,&&UI左矢印,))
    &画像表示用コマンド文字列,+=,((画像,1002,&&UI右矢印,))
    &画像表示用コマンド文字列,+=,((画像,1003,&&閉じるアイコン,))
    &画像表示用コマンド文字列,+=,((画像アンカー,1001,(0.02,0.4),(0.1,0.6)))
    &画像表示用コマンド文字列,+=,((画像アンカー,1002,(0.9,0.4),(0.98,0.6),))
    &画像表示用コマンド文字列,+=,((画像アンカー,1003,(0.9,0.9),(0.98,0.98),))
    &画像表示用コマンド文字列,+=,(($画像id用プラス,=,100))
    
    コマンド文字列実行,&画像表示用コマンド文字列

    $配列位置,=,1
    $ページ内項目数,=,10
    $旧配列位置,=,0
    
    while,true
    {
        if,$旧配列位置,!=,$配列位置,
        {
            $旧配列位置,=,$配列位置
            $count,=,0
            子画像全削除,$ソーターid
            while,$count,<,$ページ内項目数
            {
                
                括弧文字列抜き出し,&一覧,$配列位置+$count,&カード
                %カード,=,&カード
                $画像id,=,$配列位置+$count+$画像id用プラス
                画像,$画像id,%カード.&カード画像
                親子化,$ソーターid,$画像id
                $count,+=,1
                if,$配列位置+$count,>,&一覧.Count
                {
                    break
                }
            }
        }
        ボタン付加,1001,1002,1003,
        全子供ボタン付加,$ソーターid
        ボタン待ち
        switch,選択肢
        case,1001
        {
            $配列位置,-=,$ページ内項目数
            if,$配列位置,<=,0
            {
                $配列位置,=,1
            }
        }
        case,1002
        {
            if,&一覧.Count,>=,$配列位置+$ページ内項目数
            {
                $配列位置,+=,$ページ内項目数
            }
        }
        case,1003
        {
            break
        }
        default
        {
            括弧文字列抜き出し,&一覧,選択肢-$画像id用プラス,&カード,
            %カード,=,&カード
            画像全削除
            イベント実行,図鑑詳細ウインドウ生成,(%カード,1000)
            コマンド文字列実行,&画像表示用コマンド文字列
            $旧配列位置,=,0
        }
    }

@図鑑詳細ウインドウ生成
    //_#1:カード、_#2:基礎画像idプラス
    イベント実行,図鑑詳細ウインドウ画像表示,_#1,_#2
    %自分プレイヤー,=,_#1.&デフォルトマスター
    自分プレイヤー設定,_#1,%自分プレイヤー
    while,true
    {
        ボタン付加,$閉じるボタンid,
        全子供ボタン付加,$ソーターid
        ボタン待ち
        画像全削除
        switch,選択肢,
        case,$閉じるボタンid
        {
            break
        }
        case,$画像閲覧ボタンid
        {
            イベント実行,画像閲覧ウインドウ生成,_#1,_#2+100
        }
        case,$敗北後回想ボタンid
        {
            Now回想ON,
            &現在背景,=,現在背景
            &現在BGM,=,現在BGM,
            暗転,1
            背景,_#1.&デフォルト背景
            外部カードイベント実行,敗北後,_#1,相手プレイヤー,
            ループダメージ停止
            背景,&現在背景
            BGM,&現在BGM
            Now回想OFF,
            明転,1
        }
        case,$主人公オナニー回想ボタンid
        {
            Now回想ON,
            &現在背景,=,現在背景
            オナニー回数加算,_#1,1
            外部カードイベント実行,オナニー,_#1,相手プレイヤー,
            背景,&現在背景
            Now回想OFF,
        }
        case,$オナニー回想ボタンid
        {
            Now回想ON,
            &現在背景,=,現在背景
            オナニー回数加算,_#1,1
            %プレイヤー,=,%%0
            フェイス設定,%プレイヤー,false
            外部カードイベント実行,オナニー,_#1,%プレイヤー,
            背景,&現在背景
            Now回想OFF,
        }
        
        case,$命乞い回想ボタンid
        {
            Now回想ON,
            &現在背景,=,現在背景
            命乞い回数加算,_#1,1
            外部カードイベント実行,命乞い,_#1,相手プレイヤー,
            背景,&現在背景
            Now回想OFF,
        }
        case,$命乞い2回想ボタンid
        {
            Now回想ON,
            &現在背景,=,現在背景
            命乞い回数加算,_#1,1
            外部カードイベント実行,命乞い2,_#1,相手プレイヤー,
            背景,&現在背景
            Now回想OFF,
        }
        画像全削除
        イベント実行,図鑑詳細ウインドウ画像表示,_#1,_#2
    }
    画像全削除

@図鑑詳細ウインドウ画像表示
    背景,&&グレー背景,
    
    $閉じるボタンid,=,1003 +_#2    
    画像縦横比不保持,$背景id
    画像アンカー,$背景id,(0,0),(1,1)
    画像,$閉じるボタンid,&&閉じるアイコン,
    画像アンカー,$閉じるボタンid,(0.9,0.9),(0.98,0.98),

    $カード画像id,=,1004 + _#2

    %カード,=,_#1
    画像,$カード画像id,%カード.&カード画像,
    画像アンカー,$カード画像id,(0,0),(0.5,1)
    
    $テキスト画像id,=,1005 +_#2
    テキスト画像,$テキスト画像id,<align="left">{%カード.フレーバーテキスト}
    デバッグ,{%カード.フレーバーテキスト}
    // Debug line to copy character descriptions to the clipboard for translation purposes
    画像アンカー,$テキスト画像id,(0.501,0.3),(0.92,0.94)

    $ソーターid,=,1006 + _#2
    ソーター,$ソーターid,横型,(0.5,0.05),(0.95,0.25)
    
    $画像閲覧ボタンid,=,1007 + _#2
    &ボタン画像,&&ボタン背景赤
    画像,$画像閲覧ボタンid,&ボタン画像,
    画像縦横比不保持,$画像閲覧ボタンid
    親子化,$ソーターid,$画像閲覧ボタンid
    テキスト画像,$画像閲覧ボタンid+1,画像閲覧
    親子化,$画像閲覧ボタンid,$画像閲覧ボタンid+1
    
    $ボタンid,=,1009 + _#2
    $敗北後回想ボタンid,=,0
    $オナニー回想ボタンid,=,0
    $主人公オナニー回想ボタンid,=,0
    $命乞い回想ボタンid,=,0
    $命乞い2回想ボタンid,=,0
    $命乞い3回想ボタンid,=,0
    
    if,%カード.?HasSection:オナニー.Count,>,0
    {
        $ボタンid,+=,2,
        $主人公オナニー回想ボタンid,=,$ボタンid
        &ボタン画像,&&ボタン背景赤
        画像,$ボタンid,&ボタン画像,
        画像縦横比不保持,$ボタンid
        親子化,$ソーターid,$ボタンid
        テキスト画像,$ボタンid+1,オナニー(主人公)
        親子化,$ボタンid,$ボタンid+1

        $ボタンid,+=,2,
        $オナニー回想ボタンid,=,$ボタンid
        &ボタン画像,&&ボタン背景赤
        画像,$ボタンid,&ボタン画像,
        画像縦横比不保持,$ボタンid
        親子化,$ソーターid,$ボタンid
        テキスト画像,$ボタンid+1,オナニー
        親子化,$ボタンid,$ボタンid+1
    }
    if,%カード.?HasSection:命乞い.Count,>,0
    {
        $ボタンid,+=,2,
        $命乞い回想ボタンid,=,$ボタンid
        &ボタン画像,&&ボタン背景赤
        画像,$ボタンid,&ボタン画像,
        画像縦横比不保持,$ボタンid
        親子化,$ソーターid,$ボタンid
        テキスト画像,$ボタンid+1,命乞い
        親子化,$ボタンid,$ボタンid+1
    }
    if,%カード.?HasSection:命乞い2.Count,>,0
    {
        $ボタンid,+=,2,
        $命乞い2回想ボタンid,=,$ボタンid
        &ボタン画像,&&ボタン背景赤
        画像,$ボタンid,&ボタン画像,
        画像縦横比不保持,$ボタンid
        親子化,$ソーターid,$ボタンid
        テキスト画像,$ボタンid+1,命乞い2
        親子化,$ボタンid,$ボタンid+1
    }
    if,%カード.?HasSection:命乞い3.Count,>,0
    {
        $ボタンid,+=,2,
        $命乞い3回想ボタンid,=,$ボタンid
        &ボタン画像,&&ボタン背景赤
        画像,$ボタンid,&ボタン画像,
        画像縦横比不保持,$ボタンid
        親子化,$ソーターid,$ボタンid
        テキスト画像,$ボタンid+1,命乞い3
        親子化,$ボタンid,$ボタンid+1
    }
    if,%カード.?HasSection:敗北後.Count,>,0
    {
        $ボタンid,+=,2,
        $敗北後回想ボタンid,=,$ボタンid
        &ボタン画像,&&ボタン背景赤
        画像,$敗北後回想ボタンid,&ボタン画像,
        画像縦横比不保持,$敗北後回想ボタンid
        親子化,$ソーターid,$敗北後回想ボタンid
        テキスト画像,$敗北後回想ボタンid+1,敗北後
        親子化,$敗北後回想ボタンid,$敗北後回想ボタンid+1
    }
    
@画像閲覧ウインドウ生成
    背景,&&グレー背景,

    %カード,=,_#1
    &画像一覧,,
    &画像一覧,+=,%カード.全画像文字列変数Values
    $画像id,=,1002 + _#2

    $閉じるボタンid,=,1003 +_#2
    
    画像,$閉じるボタンid,&&閉じるアイコン,
    画像アンカー,$閉じるボタンid,(0.9,0.9),(0.98,0.98),
    
    $左矢印ボタンid,=,1004 + _#2
    画像,$左矢印ボタンid,&&UI左矢印
    画像アンカー,$左矢印ボタンid,(0.15,0.05),(0.25,0.2),
    $右矢印ボタンid,=,1005 + _#2
    画像,$右矢印ボタンid,&&UI右矢印
    画像アンカー,$右矢印ボタンid,(0.75,0.05),(0.85,0.2),

    
    $画像閲覧配列位置,=,1
    $旧画像閲覧配列位置,=,0
    
    while,true
    {
        括弧文字列抜き出し,&画像一覧,$画像閲覧配列位置,&画像
        画像,$画像id,&画像
        ボタン付加,$閉じるボタンid,$左矢印ボタンid,$右矢印ボタンid
        ボタン待ち
        switch,選択肢
        case,$閉じるボタンid
        {
            画像全削除
            break
        }
        case,$左矢印ボタンid
        {
            $画像閲覧配列位置,-=,1
            if,$画像閲覧配列位置,<=,0
            {
                $画像閲覧配列位置,=,1
            }
        }
        case,$右矢印ボタンid
        {
            $画像閲覧配列位置,+=,1
            if,&画像一覧.Count,<,$画像閲覧配列位置
            {
                $画像閲覧配列位置,=,&画像一覧.Count
            }
        }
    }
    画像全削除

@Sum
    //合計します。空の引数は0になります
    return,_#1+_#2+_#3+_#4