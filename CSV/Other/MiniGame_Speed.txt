default

@ゲームスタート
    自分プレイヤー設定,%%キャミー
    背景,&&宿屋朝背景
    $残り枚数,=,52
    $主人公ソーターID,=,2
    $相手ソーターID,=,3
    $場送りボタンID,=,4
    $id始点,=,3
    $手札枚数,=,0
    $相手待ち時間上限,=,4
    $相手待ち時間下限,=,1
    $場札出し損ねカウント,=,0
    &場札左座標min,(0.25,0.4)
    &場札左座標max,(0.35,0.6)
    &場札右座標min,(0.65,0.4)
    &場札右座標max,(0.75,0.6)
    &トランプ全画像,(Trump_spade (1).png,Trump_spade (2).png,Trump_spade (3).png,Trump_spade (4).png,Trump_spade (5).png,Trump_spade (6).png,Trump_spade (7).png,Trump_spade (8).png,Trump_spade (9).png,Trump_spade (10).png,Trump_spade (11).png,Trump_spade (12).png,Trump_spade (13).png,Trump_club (1).png,Trump_club (2).png,Trump_club (3).png,Trump_club (4).png,Trump_club (5).png,Trump_club (6).png,Trump_club (7).png,Trump_club (8).png,Trump_club (9).png,Trump_club (10).png,Trump_club (11).png,Trump_club (12).png,Trump_club (13).png,Trump_heart (1).png,Trump_heart (2).png,Trump_heart (3).png,Trump_heart (4).png,Trump_heart (5).png,Trump_heart (6).png,Trump_heart (7).png,Trump_heart (8).png,Trump_heart (9).png,Trump_heart (10).png,Trump_heart (11).png,Trump_heart (12).png,Trump_heart (13).png,Trump_diamond (1).png,Trump_diamond (2).png,Trump_diamond (3).png,Trump_diamond (4).png,Trump_diamond (5).png,Trump_diamond (6).png,Trump_diamond (7).png,Trump_diamond (8).png,Trump_diamond (9).png,Trump_diamond (10).png,Trump_diamond (11).png,Trump_diamond (12).png,Trump_diamond (13).png)
    &全カード,(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52)
    括弧文字列範囲抜き出し,&トランプ全画像,1,$残り枚数/2,&主人公トランプ全画像,
    括弧文字列範囲抜き出し,&全カード,1,$残り枚数/2,&主人公山札,
    括弧文字列範囲抜き出し,&トランプ全画像,$残り枚数/2+1,$残り枚数/2,&相手トランプ全画像,
    括弧文字列範囲抜き出し,&全カード,$残り枚数/2+1,$残り枚数/2,&相手山札,
    
    $主人公残り枚数,=,26
    $相手残り枚数,=,26
    $主人公手札枚数,=,0
    $相手手札枚数,=,0

    話者,自分プレイヤー
    セリフ,カードを配るわね。
    ソーター設置,$主人公ソーターID,横型,(0.15,0.1),(0.85,0.35)
    while,$主人公手札枚数,<,5
    {
        イベント実行,主人公カードドロー
    }
    セリフ,それがあなたの手札よ。
    セリフ,ルールは簡単、場にあるカードに続く数字のカードを出せばいいの。
    セリフ,ただし早いもの順だから、わたしよりあとに出してもダメ。\nそのときは新しく出てきた数字の次の数字を出すことね。
    ソーター設置,$相手ソーターID,横型,(0.15,0.7),(0.85,0.95)
    while,$相手手札枚数,<,5
    {
        イベント実行,相手カードドロー,
    }
    セリフ削除,
    画像,$場送りボタンID,&&ボタン背景青,
    画像アンカー,$場送りボタンID,(0.88,0.1),(0.98,0.4)
    テキスト画像,$場送りボタンID+1,場札を出す
    親子化,$場送りボタンID,$場送りボタンID+1
    ボタン付加,$場送りボタンID
    ボタン待ち
    イベント実行,主人公場札出し左
    イベント実行,相手場札出し右
    while,$相手残り枚数+$相手手札枚数,>,0,&&,$主人公残り枚数+$主人公手札枚数,>,0
    {
        全子供ボタン付加,$主人公ソーターID
        ボタン付加,$場送りボタンID
        if,$待ち時間,==,0
        {
            if,@CanPlace場札(&主人公手札),==,0,
            {
                $待ち時間,=,2,
            }else{
                if,@CanPlace場札(&相手手札),==,0,
                {
                    $待ち時間,=,5
                }else{
                    乱数生成,$相手待ち時間下限,$相手待ち時間上限
                    $待ち時間,=,乱数,
                }
            }
        }
        ボタン待ち,$待ち時間
        switch,選択肢,
        $待ち時間,=,0
        case,-1
        {
            if,@CanPlace場札(&相手手札),==,0,&&,@CanPlace場札(&主人公手札),==,0,
            {
                イベント実行,主人公場札出し左
                イベント実行,相手場札出し右
            }else{
                イベント実行,相手手札から場札
            }
        }
        case,$場送りボタンID
        {
            イベント実行,相手可能な限り場札
            イベント実行,主人公場札出し左
            イベント実行,相手場札出し右
        }
        default
        {
            if,@場札判定(選択肢,$場札左),==,1,
            {
                イベント実行,主人公手札から場札左,選択肢,
                イベント実行,主人公カードドロー
                continue
            }else{
                if,@場札判定(選択肢,$場札右),==,1,
                {
                    イベント実行,主人公手札から場札右,選択肢
                    イベント実行,主人公カードドロー
                    continue
                }else{
                    SE,&&エラーSE,
                    $待ち時間,=,残り選択時間
                }
            }
        }
    }
    if,$主人公残り枚数+$主人公手札枚数,==,0
    {
        アラート,プレイヤーの勝利！
    }else{
        アラート,相手プレイヤーの勝利！
    }

@主人公カードドロー
    if,$主人公残り枚数,==,0
    {
        イベント終了
    }
    括弧文字列改変ランダム抜き出し,&主人公山札,&トランプ数字
    括弧文字列抜き出し,&トランプ全画像,&トランプ数字,&トランプ画像,
    括弧文字列末尾挿入,&主人公手札,&トランプ数字
    $主人公手札枚数,+=,1
    $主人公残り枚数,-=,1
    $画像id,=,&トランプ数字+10
    画像,$画像id,&トランプ画像,
    親子化,$主人公ソーターID,$画像id
    SE,&&ドローSE,
    デバッグ,ddddd主人公山札{&主人公山札}
    デバッグ,hhhhh主人公手札{&主人公手札}


@相手カードドロー
    if,$相手残り枚数,==,0
    {
        イベント終了
    }
    括弧文字列改変ランダム抜き出し,&相手山札,&トランプ数字
    括弧文字列抜き出し,&トランプ全画像,&トランプ数字,&トランプ画像,
    括弧文字列末尾挿入,&相手手札,&トランプ数字
    $相手手札枚数,+=,1
    $相手残り枚数,-=,1
    $画像id,=,&トランプ数字+10
    画像,$画像id,&トランプ画像,
    親子化,$相手ソーターID,$画像id
    SE,&&ドローSE,
    デバッグ,ddddd相手山札{&相手山札}
    デバッグ,hhhhh相手手札{&相手手札}

@主人公場札出し左
    if,$主人公残り枚数,==,0
    {
        括弧文字列改変ランダム抜き出し,&主人公手札,&トランプ数字,
        親子化解除,$主人公ソーターID,&トランプ数字+10
        画像アンカー,&トランプ数字+10,&場札左座標min,&場札左座標max
        $主人公手札枚数,-=,1
        $場札左,=,&トランプ数字
        イベント終了
    }
    括弧文字列改変ランダム抜き出し,&主人公山札,&トランプ数字
    括弧文字列抜き出し,&トランプ全画像,&トランプ数字,&トランプ画像,
    $場札左,=,&トランプ数字
    $主人公残り枚数,-=,1
    $画像id,=,&トランプ数字+10
    画像,$画像id,&トランプ画像,
    画像アンカー,$画像id,&場札左座標min,&場札左座標max

@相手場札出し右
    乱数生成,1,$相手残り枚数,
    括弧文字列改変抜き出し,&相手山札,乱数,&トランプ数字
    括弧文字列抜き出し,&トランプ全画像,&トランプ数字,&トランプ画像,
    $場札右,=,&トランプ数字
    $相手残り枚数,-=,1
    $画像id,=,&トランプ数字+10
    画像,$画像id,&トランプ画像,
    画像アンカー,$画像id,&場札右座標min,&場札右座標max

@主人公手札から場札左
    $選択カード,=,_#1-10
    括弧文字列インデックス代入,&主人公手札,$選択カード,$インデックス
    括弧文字列RemoveAt,&主人公手札,$インデックス
    親子化解除,$主人公ソーターID,_#1
    画像アンカー,_#1,&場札左座標min,&場札左座標max
    $主人公手札枚数,-=,1
    $場札左,=,_#1-10

@主人公手札から場札右
    $選択カード,=,_#1-10
    括弧文字列インデックス代入,&主人公手札,$選択カード,$インデックス
    括弧文字列RemoveAt,&主人公手札,$インデックス
    親子化解除,$主人公ソーターID,_#1
    画像アンカー,_#1,&場札右座標min,&場札右座標max
    $主人公手札枚数,-=,1
    $場札右,=,_#1-10

@相手手札から場札
    $count,=,0
    while,$count,<,$相手手札枚数
    {
        $count,+=,1
        括弧文字列抜き出し,&相手手札,$count,&判定札,
        $画像id,=,&判定札+10
        if,@場札判定($画像id,$場札左),==,1
        {
            括弧文字列RemoveAt,&相手手札,$count
            親子化解除,$相手ソーターID,$画像id
            画像アンカー,$画像id,&場札左座標min,&場札左座標max
            $相手手札枚数,-=,1
            $場札左,=,$画像id-10
            イベント実行,相手カードドロー
            break
        }else{
            if,@場札判定($画像id,$場札右),==,1
            {
                括弧文字列RemoveAt,&相手手札,$count
                親子化解除,$相手ソーターID,$画像id
                画像アンカー,$画像id,&場札右座標min,&場札右座標max
                $相手手札枚数,-=,1
                $場札右,=,$画像id-10
                イベント実行,相手カードドロー
                break
            }
        }
    }

@相手可能な限り場札
    $count,=,0
    while,$count,<,$相手手札枚数
    {
        $count,+=,1
        括弧文字列抜き出し,&相手手札,$count,&判定札,
        $画像id,=,&判定札+10
        if,@場札判定($画像id,$場札左),==,1
        {
            括弧文字列RemoveAt,&相手手札,$count
            親子化解除,$相手ソーターID,$画像id
            画像アンカー,$画像id,&場札左座標min,&場札左座標max
            $相手手札枚数,-=,1
            $場札左,=,$画像id-10
            イベント実行,相手カードドロー
            $count,=,0
        }else{
            if,@場札判定($画像id,$場札右),==,1
            {
                括弧文字列RemoveAt,&相手手札,$count
                親子化解除,$相手ソーターID,$画像id
                画像アンカー,$画像id,&場札右座標min,&場札右座標max
                $相手手札枚数,-=,1
                $場札右,=,$画像id-10
                イベント実行,相手カードドロー
                $count,=,0
            }
        }
    }    


@場札判定
    $トランプID,=,_#1 - 10
    $トランプマーク,=,$トランプID / 13
    $出し札数字,=,$トランプID - 13*$トランプマーク,
    if,$出し札数字,==,0
    {
        $出し札数字,=,13
    }
    $トランプID,=,_#2
    $トランプマーク,=,$トランプID / 13
    $場札数字,=,$トランプID - 13*$トランプマーク,
    if,$場札数字,==,0
    {
        $場札数字,=,13
    }
    デバッグ,出し札{$出し札数字}:場札{$場札数字}、{_#1}:{_#2}
    if,$出し札数字,==,$場札数字+1,||,$出し札数字,==,$場札数字-1,
    {
        return,1
    }else{
        return,0
    }

@CanPlace場札
    //_#1は検討したいカードの括弧文字列
    $count,=,0
    while,$count,<,_#1.Count
    {
        括弧文字列抜き出し,_#1,$count,&トランプ数字
        if,@場札判定(&トランプ数字,$場札右),==,1,||,@場札判定(&トランプ数字,$場札左),==,1
        {
            //デバッグ,{&トランプ数字}は出せる
            return,1
        }
        //デバッグ,{&トランプ数字}は出せない
    }
    デバッグ,{_#1}に出せるカードなし
    return,0

